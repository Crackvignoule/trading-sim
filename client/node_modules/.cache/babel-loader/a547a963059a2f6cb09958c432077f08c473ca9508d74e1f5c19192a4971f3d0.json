{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\remy\\\\Documents\\\\Cours\\\\trading-sim\\\\front-end\\\\src\\\\pages\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from '../../components/Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [data, setData] = useState(null); // Ajout d'un état pour stocker les données de l'API\n\n  useEffect(() => {\n    // Appel à l'API dès que le composant est monté\n    fetch('/api').then(response => response.json()).then(data => setData(data)) // Mise à jour de l'état avec les données reçues\n    .catch(error => console.error(\"Erreur lors de la récupération des données:\", error));\n  }, []); // Le tableau vide comme second argument signifie que cet effet ne s'exécute qu'après le premier rendu du composant\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the home page of our application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Donn\\xE9es re\\xE7ues de l'API: \", JSON.stringify(data)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement des donn\\xE9es...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","Home","_s","data","setData","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/remy/Documents/Cours/trading-sim/front-end/src/pages/Home/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from '../../components/Chart/Chart';\r\n\r\nfunction Home() {\r\n    const [data, setData] = useState(null); // Ajout d'un état pour stocker les données de l'API\r\n\r\n    useEffect(() => {\r\n        // Appel à l'API dès que le composant est monté\r\n        fetch('/api')\r\n            .then(response => response.json())\r\n            .then(data => setData(data)) // Mise à jour de l'état avec les données reçues\r\n            .catch(error => console.error(\"Erreur lors de la récupération des données:\", error));\r\n    }, []); // Le tableau vide comme second argument signifie que cet effet ne s'exécute qu'après le premier rendu du composant\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome to the Home Page</h1>\r\n        <p>This is the home page of our application.</p>\r\n        {/* Conditionnellement afficher les données de l'API ou un message de chargement */}\r\n        {data ? (\r\n            <div>\r\n                <p>Données reçues de l'API: {JSON.stringify(data)}</p>\r\n                <Chart data={data} /> {/* Supposant que votre composant Chart peut prendre des données en tant que prop */}\r\n            </div>\r\n        ) : (\r\n            <p>Chargement des données...</p>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACZ;IACAQ,KAAK,CAAC,MAAM,CAAC,CACRC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACH,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;IAAA,CAC5BM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC,CAAC;EAC5F,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjChB,OAAA;MAAAY,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE/Cb,IAAI,gBACDH,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,GAAG,iCAAyB,EAACK,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDhB,OAAA,CAACF,KAAK;QAACK,IAAI,EAAEA;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,gBAENhB,OAAA;MAAAY,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACd,EAAA,CA1BQD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}